<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="rjButton1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>